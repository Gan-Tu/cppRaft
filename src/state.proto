syntax = "proto3";

package cppraft;

import "src/log.proto";

message ServerIdentifier {
  // A unique identifier for the server
  string id = 1;
}

// Updated on stable storage before responding to RPCs
message PersistentServerState {
  // Latest term the server has seen. 
  // This is initialized to 0 on first boot, and increases monotonically
  uint64 current_term = 1;
  // candidateId that received vote in current term (or null if none)
  ServerIdentifier voted_for = 2;
  // Replicated log entries for this server
  ReplicatedLogs logs = 3;
}

message VolatileServerState {
  // Index of highest log entry known to be committed.
  // This is initialized to 0, and increases monotonically
  uint64 commit_index = 1;
  // Index of highest log entry applied to the state machine.
  // This is initialized to 0, and increases monotonically
  uint64 last_applied = 2;
}

// Reinitialized after election
message VolatileLeaderState {
  message ServerLogIndexRecord {
    ServerIdentifier server = 1;
    uint64 index = 2;
  }
  // For each server, index of the next log entry to send to that server
  // This is initialized to leader last log index + 1
  repeated ServerLogIndexRecord next_index = 1;
  // For each server, highest log entry index known to be replicated on server
  // This is initialized to 0, and increases monotonically
  repeated ServerLogIndexRecord match_index = 2;
}